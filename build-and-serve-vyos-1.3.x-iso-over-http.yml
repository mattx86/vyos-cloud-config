#cloud-config
# Cloud: Hetzner Cloud (though this may work with your cloud without any changes)
# Instance Type: Standard, CPX11 (2 vCPU, 2GB RAM)
# OS: Debian 11
# This builds the latest VyOS 1.3.x (equuleus) ISO and serves it over HTTP and HTTPS.
# The process takes approx. 25 minutes on the CPX11 instance type.
write_files:
  - content: |
      #!/bin/bash
      CURDATE=$(date +'%Y-%m-%d')
      FINAL_FILENAME="vyos-1.3.x-amd64-${CURDATE}.iso"
      ADDRESSES=$(ip addr | grep -P 'inet (?!127)' | grep -v 'docker' | awk '{sub(/\/[0-9]+/, "", $2); print $2}')
      /bin/mkdir /var/www/html/vyos
      /bin/mv /root/vyos-build/build/live-image-amd64.hybrid.iso /var/www/html/vyos/${FINAL_FILENAME}
      cd /var/www/html/vyos
      sha256sum -b $FINAL_FILENAME >${FINAL_FILENAME}.sha256
      cd /root/vyos-build
      git log --since="6 months ago" >/var/www/html/vyos/VYOS-BUILD-COMMITS
      openssl req -nodes -newkey rsa:2048 -keyout /etc/ssl/private/vyos-build.iso.key -out /tmp/vyos-build.iso.csr -subj "/C=XX/ST=Unknown/L=Unknown/O=Unknown/OU=Unknown/CN=vyos-build.iso"
      openssl x509 -signkey /etc/ssl/private/vyos-build.iso.key -in /tmp/vyos-build.iso.csr -req -days 365 -out /etc/ssl/certs/vyos-build.iso.crt
      echo '
      server {
       	listen 80 default_server;
       	listen [::]:80 default_server;
       	listen 443 ssl default_server;
       	listen [::]:443 ssl default_server;
       	ssl_certificate /etc/ssl/certs/vyos-build.iso.crt;
       	ssl_certificate_key /etc/ssl/private/vyos-build.iso.key;
       	root /var/www/html;
       	default_type text/plain;
       	index index.html index.nginx-debian.html;
       	server_name _;
       	location / {
          autoindex on;
          try_files $uri $uri/ =404;
       	}
      }' > /etc/nginx/sites-enabled/default
      systemctl restart nginx
      echo
      echo "================================"
      echo "Get the VyOS ISO at:"
      for ADDRESS in $ADDRESSES; do
        echo "http://${ADDRESS}/vyos/${FINAL_FILENAME}"
        echo "https://${ADDRESS}/vyos/${FINAL_FILENAME}"
      done
      echo "================================"
      echo
    path: /usr/local/bin/iso_file_final.sh
    permissions: '0750'
runcmd:
  - apt-get update >/dev/tty1 2>&1
  - apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common git ufw nginx >/dev/tty1 2>&1
  - ufw allow http
  - ufw allow https
  - ufw enable >/dev/tty1 2>&1
  - apt-get upgrade -y >/dev/tty1 2>&1
  - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - >/dev/tty1 2>&1
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" >/dev/tty1 2>&1
  - apt-get update >/dev/tty1 2>&1
  - apt-get install -y docker-ce >/dev/tty1 2>&1
  - systemctl start docker >/dev/tty1 2>&1
  - cd /root && git clone -b equuleus --single-branch https://github.com/vyos/vyos-build >/dev/tty1 2>&1
  - cd /root/vyos-build/docker && docker build -t vyos-builder . >/dev/tty1 2>&1
  - cd /root/vyos-build && docker run -t -v "$(pwd)":/vyos -w /vyos --privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0 vyos-builder bash -c './configure && make iso' >/dev/tty1 2>&1
  - systemctl stop docker
  - /usr/local/bin/iso_file_final.sh >/dev/tty1 2>&1
